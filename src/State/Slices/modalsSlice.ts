import { PayloadAction, createSlice } from '@reduxjs/toolkit';
import { DebitAuthorization, LiveDebitRequest } from '../../Api/pub/autogenerated/ts/types';

type ModalRequest = { request: LiveDebitRequest, sourceId: string }
export type EditDebit = DebitAuthorization & { sourceId: string, domainName?: string, avatarUrl?: string }
interface State {
	debitRequests: ModalRequest[]
	editDebit: EditDebit | null;
	debitsRefetchHook: number
}






const modalsSlice = createSlice({
	name: "modals",
	initialState: { debitRequests: [], editDebit: null, debitsRefetchHook: 0 } as State,
	reducers: {
		refetchDebits: (state) => {
			state.debitsRefetchHook = Math.random();
		},
		// add debit modal
		addDebitRequest: (state, action: PayloadAction<ModalRequest>) => {
			state.debitRequests.push(action.payload);
		},
		removeDebitRequest: (state, action: PayloadAction<{ requestorNpub: string, sourceId: string }>) => {
			state.debitRequests = state.debitRequests.filter(debit => debit.request.npub !== action.payload.requestorNpub && debit.sourceId !== action.payload.sourceId);
		},

		// edit debit modal
		setDebitToEdit: (state, action: PayloadAction<EditDebit | null>) => {
			state.editDebit = action.payload;
		}
	},
	
});

export const { addDebitRequest, removeDebitRequest, setDebitToEdit, refetchDebits } = modalsSlice.actions;
export default modalsSlice.reducer;
