
import styles from "./styles/index.module.scss";
import { TransactionInfo } from "../../Pages/Home";
import { Backdrop } from "../Modals/Modal/Modal.style";
import { motion } from "framer-motion";
import ReactDOM from 'react-dom';
import React from "react";
import * as Types from '../../Api/autogenerated/ts/types'
import { Price } from "../../State/Slices/usdToBTCSlice";
import moment from "moment";
import classNames from "classnames";

const getRightSideValueString = (amount: number, negative: boolean, price: Price) => {
  return `${negative ? "" : "-"} ${amount} sats (${Math.round(100 * amount * price.sellPrice / (100 * 1000 * 1000)) / 100} USD)`;
}

interface Props {
  operation: TransactionInfo;
  hide: () => void;
  price: Price
}

const TransactionInfoModal = ({ operation, hide, price } : Props) => {
  const onChain = operation.type === Types.UserOperationType.INCOMING_TX || operation.type === Types.UserOperationType.OUTGOING_TX;

  const modal = 
    <React.Fragment>
      <Backdrop onClick={hide} onTouchEnd={hide} />
      <motion.div layoutId={operation.operationId} className={styles["wrapper"]}>
        <div className={styles["container"]}>
          <div className={styles["content"]}>
            <div className={styles["header"]}>
              {onChain ? "On-chain Transaction" : "Lightning Transaction"}

            </div>
            <div className={styles["info-container"]}>
              <div className={styles["info-item"]}>
                <span className={styles["left"]}>{operation.inbound ? "Amount received" : "Amount sent"}</span>
                <span className={styles["right"]}>{getRightSideValueString(operation.amount, operation.inbound, price)}</span>
              </div>
              <div className={styles["info-item"]}>
                <span className={styles["left"]}>Network fee</span>
                <span className={styles["right"]}>{getRightSideValueString(operation.network_fee, true, price)}</span>
              </div>
              <div className={styles["info-item"]}>
                <span className={styles["left"]}>Service fee</span>
                <span className={styles["right"]}>{getRightSideValueString(operation.service_fee, true, price)}</span>
              </div>
              <div className={styles["info-item"]}>
                <span className={styles["left"]}>Status</span>
                <span className={styles["right"]}>{operation.confirmed ? "Confirmed" : "Pending"}</span>
              </div>
              <div className={styles["info-item"]}>
                <span className={styles["left"]}>Date</span>
                <span className={styles["right"]}>{moment(operation.paidAtUnix * 1000).format('YYYY-MM-DD HH:mm')}</span>
              </div>
              <div className={classNames(styles["info-item"], styles["info-item-databox"])}>
                <span className={styles["left"]}>Source</span>
                <div className={classNames(styles["right"], styles["data-box"])}>
                  {operation.source}
                </div>
              </div>
              {
                !onChain
                &&
                <div className={classNames(styles["info-item"], styles["info-item-databox"])}>
                  <span className={styles["left"]}>Paid invoice</span>
                  <div className={classNames(styles["right"], styles["data-box"])}>
                    {operation.identifier}
                  </div>
                </div>
              }
            </div>
          </div>
        </div>
      </motion.div>
    </React.Fragment>;
  return ReactDOM.createPortal(modal, document.body);
};

export default TransactionInfoModal;